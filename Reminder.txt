class BaseGr
{
	virtual UpdateData( int CurrentImage ); 
};

class ComputeShader : BaseGr
{
	Update();
};

class DefaultShader : BaseGr
{
	std::vector< uint32_t >         _nbVertex;
	Update();
};

Class Renderer
{
	std:vector<BaseGr*> _vectorGraphicPipeline;
};

int main()
{
	Son::Object Maya;
	Maya.AddComponent<Soon::Mesh>();
	Maya.GetComponent<Soon::Mesh>().LoadMesh("ICI");

	Soon::Object Particles;
	Particles.AddComponent<Soon::SystemParticles>();

//	for (auto& pipeline : Renderer::_vectorGraphicPipeline)
//	{
//		pipeline.UpdateData();
//	}
}

Mais UpdateData a besoin du _device du Graphicsinstance, alors ... .
Soit je fais un GetDevice();
Soit les pipelines sont stoke dans la class GraphicsInstance;

Puis-Je avoir Un truc de creation de layout dynamic ?
Faiut lancer CreateDescriptorSetLayout avec une struct en param.
